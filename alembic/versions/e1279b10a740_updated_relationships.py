"""Updated relationships

Revision ID: e1279b10a740
Revises: 53eaffe53f01
Create Date: 2024-11-21 18:47:56.731042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1279b10a740'
down_revision: Union[str, None] = '53eaffe53f01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    pass
    # # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_gov_securities_actual', table_name='gov_securities')
    # op.drop_index('ix_gov_securities_allowable', table_name='gov_securities')
    # op.drop_index('ix_gov_securities_description', table_name='gov_securities')
    # op.drop_index('ix_gov_securities_id', table_name='gov_securities')
    # op.drop_table('gov_securities')
    # op.drop_index('ix_user_auth_id', table_name='user_auth')
    # op.drop_table('user_auth')
    # op.drop_index('ix_employer_info_id', table_name='employer_info')
    # op.drop_table('employer_info')
    # op.drop_index('ix_investment_record_id', table_name='investment_record')
    # op.drop_table('investment_record')
    # op.drop_index('ix_given_premium_allowable', table_name='given_premium')
    # op.drop_index('ix_given_premium_company', table_name='given_premium')
    # op.drop_index('ix_given_premium_given_premium', table_name='given_premium')
    # op.drop_index('ix_given_premium_id', table_name='given_premium')
    # op.drop_index('ix_given_premium_policy_no', table_name='given_premium')
    # op.drop_index('ix_given_premium_policy_value', table_name='given_premium')
    # op.drop_index('ix_given_premium_remarks', table_name='given_premium')
    # op.drop_table('given_premium')
    # op.drop_index('ix_salary_income_records_id', table_name='salary_income_records')
    # op.drop_table('salary_income_records')
    # op.drop_index('ix_salary_income_summary_exempted_income', table_name='salary_income_summary')
    # op.drop_index('ix_salary_income_summary_id', table_name='salary_income_summary')
    # op.drop_index('ix_salary_income_summary_tax_liability', table_name='salary_income_summary')
    # op.drop_index('ix_salary_income_summary_taxable_income', table_name='salary_income_summary')
    # op.drop_index('ix_salary_income_summary_total_income', table_name='salary_income_summary')
    # op.drop_table('salary_income_summary')
    # op.drop_index('ix_taxpayer_address', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_age_above_65', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_assesment_year', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_bin_no', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_circle', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_company_name', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_date_of_birth', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_disable', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_email', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_employer_name', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_employment_type', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_etin', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_freedom_fighter', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_gender', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_mobile', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_name', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_name_of_organization', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_name_tin_partners', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_nid', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_parent_of_disable', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_residential_status', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_spouse_name', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_spouse_tin', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_telephone', table_name='taxpayer')
    # op.drop_index('ix_taxpayer_zone', table_name='taxpayer')
    # op.drop_table('taxpayer')
    # op.drop_index('ix_allowance_details_id', table_name='allowance_details')
    # op.drop_table('allowance_details')
    # op.drop_index('ix_rebate_record_id', table_name='rebate_record')
    # op.drop_index('ix_rebate_record_rebate', table_name='rebate_record')
    # op.drop_table('rebate_record')
    # op.drop_index('ix_eft_actual', table_name='eft')
    # op.drop_index('ix_eft_allowable', table_name='eft')
    # op.drop_index('ix_eft_description', table_name='eft')
    # op.drop_index('ix_eft_id', table_name='eft')
    # op.drop_table('eft')
    # op.drop_index('ix_perquisite_details_id', table_name='perquisite_details')
    # op.drop_table('perquisite_details')
    # op.drop_index('ix_vehicle_facility_details_id', table_name='vehicle_facility_details')
    # op.drop_table('vehicle_facility_details')
    # op.drop_index('ix_dps_actual', table_name='dps')
    # op.drop_index('ix_dps_allowable', table_name='dps')
    # op.drop_index('ix_dps_description', table_name='dps')
    # op.drop_index('ix_dps_id', table_name='dps')
    # op.drop_table('dps')
    # # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='dps_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='dps_pkey')
    )
    op.create_index('ix_dps_id', 'dps', ['id'], unique=True)
    op.create_index('ix_dps_description', 'dps', ['description'], unique=False)
    op.create_index('ix_dps_allowable', 'dps', ['allowable'], unique=False)
    op.create_index('ix_dps_actual', 'dps', ['actual'], unique=False)
    op.create_table('vehicle_facility_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('upto_2500CC', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cost_for_upto_2500', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('greater_than_2500cc', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cost_for_more_than_2500', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_of_months', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='vehicle_facility_details_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='vehicle_facility_details_pkey')
    )
    op.create_index('ix_vehicle_facility_details_id', 'vehicle_facility_details', ['id'], unique=True)
    op.create_table('perquisite_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('mohargha_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mohargha_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('insurance_premium_borne_by_the_employer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('insurance_premium_borne_by_the_employer_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('housing_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('housing_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('house_rent_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('house_rent_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('entertainment_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entertainment_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('passage_leave', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('passage_leave_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('medical_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('medical_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('any_other_obligations_of_the_employee', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('any_other_obligations_of_the_employee_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('other', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('total', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='perquisite_details_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='perquisite_details_pkey')
    )
    op.create_index('ix_perquisite_details_id', 'perquisite_details', ['id'], unique=True)
    op.create_table('eft',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='eft_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='eft_pkey')
    )
    op.create_index('ix_eft_id', 'eft', ['id'], unique=True)
    op.create_index('ix_eft_description', 'eft', ['description'], unique=False)
    op.create_index('ix_eft_allowable', 'eft', ['allowable'], unique=False)
    op.create_index('ix_eft_actual', 'eft', ['actual'], unique=False)
    op.create_table('rebate_record',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('taxable_income', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('allowable_investment', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('rebate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='rebate_record_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='rebate_record_pkey')
    )
    op.create_index('ix_rebate_record_rebate', 'rebate_record', ['rebate'], unique=False)
    op.create_index('ix_rebate_record_id', 'rebate_record', ['id'], unique=True)
    op.create_table('allowance_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('any_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('any_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('leave_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('leave_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('lump_grant', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lump_grant_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('bonus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bonus_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fee', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fee_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('commission', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('commission_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('overtime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('overtime_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('other', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('other_details', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('total', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='allowance_details_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='allowance_details_pkey')
    )
    op.create_index('ix_allowance_details_id', 'allowance_details', ['id'], unique=True)
    op.create_table('taxpayer',
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('nid', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('gender', postgresql.ENUM('male', 'female', 'other', name='gender'), autoincrement=False, nullable=False),
    sa.Column('circle', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('zone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('employment_type', postgresql.ENUM('gov', 'private', name='employmenttype'), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('assesment_year', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('residential_status', postgresql.ENUM('resident', 'non_resident', name='residentialstatus'), autoincrement=False, nullable=False),
    sa.Column('freedom_fighter', postgresql.ENUM('yes', 'no', name='freedomfighter'), autoincrement=False, nullable=False),
    sa.Column('disable', postgresql.ENUM('yes', 'no', name='disable'), autoincrement=False, nullable=False),
    sa.Column('parent_of_disable', postgresql.ENUM('yes', 'no', name='parentofdisable'), autoincrement=False, nullable=False),
    sa.Column('num_autistic_children', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('age_above_65', postgresql.ENUM('yes', 'no', name='ageabove65'), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('spouse_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('spouse_tin', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('telephone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('employer_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('name_of_organization', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('bin_no', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('name_tin_partners', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_auth.id'], name='taxpayer_user_id_fkey'),
    sa.PrimaryKeyConstraint('etin', name='taxpayer_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_taxpayer_zone', 'taxpayer', ['zone'], unique=False)
    op.create_index('ix_taxpayer_telephone', 'taxpayer', ['telephone'], unique=False)
    op.create_index('ix_taxpayer_spouse_tin', 'taxpayer', ['spouse_tin'], unique=False)
    op.create_index('ix_taxpayer_spouse_name', 'taxpayer', ['spouse_name'], unique=False)
    op.create_index('ix_taxpayer_residential_status', 'taxpayer', ['residential_status'], unique=False)
    op.create_index('ix_taxpayer_parent_of_disable', 'taxpayer', ['parent_of_disable'], unique=False)
    op.create_index('ix_taxpayer_nid', 'taxpayer', ['nid'], unique=True)
    op.create_index('ix_taxpayer_name_tin_partners', 'taxpayer', ['name_tin_partners'], unique=False)
    op.create_index('ix_taxpayer_name_of_organization', 'taxpayer', ['name_of_organization'], unique=False)
    op.create_index('ix_taxpayer_name', 'taxpayer', ['name'], unique=False)
    op.create_index('ix_taxpayer_mobile', 'taxpayer', ['mobile'], unique=True)
    op.create_index('ix_taxpayer_gender', 'taxpayer', ['gender'], unique=False)
    op.create_index('ix_taxpayer_freedom_fighter', 'taxpayer', ['freedom_fighter'], unique=False)
    op.create_index('ix_taxpayer_etin', 'taxpayer', ['etin'], unique=True)
    op.create_index('ix_taxpayer_employment_type', 'taxpayer', ['employment_type'], unique=False)
    op.create_index('ix_taxpayer_employer_name', 'taxpayer', ['employer_name'], unique=False)
    op.create_index('ix_taxpayer_email', 'taxpayer', ['email'], unique=True)
    op.create_index('ix_taxpayer_disable', 'taxpayer', ['disable'], unique=False)
    op.create_index('ix_taxpayer_date_of_birth', 'taxpayer', ['date_of_birth'], unique=False)
    op.create_index('ix_taxpayer_company_name', 'taxpayer', ['company_name'], unique=False)
    op.create_index('ix_taxpayer_circle', 'taxpayer', ['circle'], unique=False)
    op.create_index('ix_taxpayer_bin_no', 'taxpayer', ['bin_no'], unique=True)
    op.create_index('ix_taxpayer_assesment_year', 'taxpayer', ['assesment_year'], unique=False)
    op.create_index('ix_taxpayer_age_above_65', 'taxpayer', ['age_above_65'], unique=False)
    op.create_index('ix_taxpayer_address', 'taxpayer', ['address'], unique=False)
    op.create_table('salary_income_summary',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('total_income', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exempted_income', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('taxable_income', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tax_liability', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='salary_income_summary_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='salary_income_summary_pkey')
    )
    op.create_index('ix_salary_income_summary_total_income', 'salary_income_summary', ['total_income'], unique=False)
    op.create_index('ix_salary_income_summary_taxable_income', 'salary_income_summary', ['taxable_income'], unique=False)
    op.create_index('ix_salary_income_summary_tax_liability', 'salary_income_summary', ['tax_liability'], unique=False)
    op.create_index('ix_salary_income_summary_id', 'salary_income_summary', ['id'], unique=True)
    op.create_index('ix_salary_income_summary_exempted_income', 'salary_income_summary', ['exempted_income'], unique=False)
    op.create_table('salary_income_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('basic_salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('basic_salary_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_allowances', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_allowances_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_arrear_salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_arrear_salary_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_gratuity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_gratuity_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_perquisites', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_perquisites_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_receipts_or_additional_receipts_in_lieu_of_salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_receipts_or_additional_receipts_in_lieu_of_salary_remar', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_income_from_employee_share_scheme', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_income_from_employee_share_scheme_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_housing_facility', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_housing_facility_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_vehicle_facility', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_vehicle_facility_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_any_other_benefit_provided_by_the_employer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_any_other_benefit_provided_by_the_employer_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_contribution_paid_by_employer_to_recognized_pf', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_contribution_paid_by_employer_to_recognized_pf_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('private_others', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('private_others_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_arrear_pay', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_arrear_pay_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_festival_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_festival_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_special_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_special_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_support_staff_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_support_staff_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_leave_allowance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_leave_allowance_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_reward', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_reward_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_overtime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_overtime_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_bangla_noboborsho', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_bangla_noboborsho_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_interest_accrued_from_PF', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_interest_accrued_from_PF_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_lump_grant', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_lump_grant_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_gratuity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_gratuity_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gov_others', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_others_remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('employer_info_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employer_info_id'], ['employer_info.id'], name='salary_income_records_employer_info_id_fkey'),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='salary_income_records_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='salary_income_records_pkey')
    )
    op.create_index('ix_salary_income_records_id', 'salary_income_records', ['id'], unique=True)
    op.create_table('given_premium',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('policy_no', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('policy_value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('given_premium', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('remarks', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='given_premium_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='given_premium_pkey')
    )
    op.create_index('ix_given_premium_remarks', 'given_premium', ['remarks'], unique=False)
    op.create_index('ix_given_premium_policy_value', 'given_premium', ['policy_value'], unique=False)
    op.create_index('ix_given_premium_policy_no', 'given_premium', ['policy_no'], unique=False)
    op.create_index('ix_given_premium_id', 'given_premium', ['id'], unique=True)
    op.create_index('ix_given_premium_given_premium', 'given_premium', ['given_premium'], unique=False)
    op.create_index('ix_given_premium_company', 'given_premium', ['company'], unique=False)
    op.create_index('ix_given_premium_allowable', 'given_premium', ['allowable'], unique=False)
    op.create_table('investment_record',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('gov_securities_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_securities_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gov_securities_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eft_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eft_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eft_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('life_insurance_given_premium_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('life_insurance_given_premium_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('life_insurance_given_premium_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('premium_or_contractual_deferred_annuity_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('premium_or_contractual_deferred_annuity_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('premium_or_contractual_deferred_annuity_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contribution_paid_to_deposit_pension_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_paid_to_deposit_pension_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_paid_to_deposit_pension_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('investment_in_any_securities_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('investment_in_any_securities_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('investment_in_any_securities_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('provisions_of_pf_act_1925_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('provisions_of_pf_act_1925_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('provisions_of_pf_act_1925_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_approved_provident_fund_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_approved_provident_fund_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_approved_provident_fund_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_superannuation_funds_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_superannuation_funds_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contributions_to_superannuation_funds_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_welfare_fund_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_welfare_fund_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_welfare_fund_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_zakat_fund_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_zakat_fund_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_zakat_fund_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_liberation_war_memory_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_liberation_war_memory_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_liberation_war_memory_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donations_to_father_of_nation_memory_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_father_of_nation_memory_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_father_of_nation_memory_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_disabled_organizations_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_disabled_organizations_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_disabled_organizations_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donations_to_liberation_war_museum_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_liberation_war_museum_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_liberation_war_museum_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_ahsania_cancer_hospital_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_ahsania_cancer_hospital_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_ahsania_cancer_hospital_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donations_to_icddrb_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_icddrb_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_icddrb_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_crp_savar_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_crp_savar_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_crp_savar_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donations_to_charitable_educational_institutions_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_charitable_educational_institutions_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donations_to_charitable_educational_institutions_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_asiatic_society_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_asiatic_society_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_asiatic_society_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('donation_to_dhaka_ahsania_mission_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_dhaka_ahsania_mission_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('donation_to_dhaka_ahsania_mission_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_super_annuity_fund_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_super_annuity_fund_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contribution_to_super_annuity_fund_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('other_actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('other_allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_investment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allowable_investment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='investment_record_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='investment_record_pkey')
    )
    op.create_index('ix_investment_record_id', 'investment_record', ['id'], unique=True)
    op.create_table('employer_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='employer_info_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='employer_info_pkey')
    )
    op.create_index('ix_employer_info_id', 'employer_info', ['id'], unique=True)
    op.create_table('user_auth',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_auth_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_auth_pkey'),
    sa.UniqueConstraint('email', name='user_auth_email_key'),
    sa.UniqueConstraint('password', name='user_auth_password_key'),
    sa.UniqueConstraint('username', name='user_auth_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_auth_id', 'user_auth', ['id'], unique=True)
    op.create_table('gov_securities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('allowable', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('etin', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['etin'], ['taxpayer.etin'], name='gov_securities_etin_fkey'),
    sa.PrimaryKeyConstraint('id', name='gov_securities_pkey')
    )
    op.create_index('ix_gov_securities_id', 'gov_securities', ['id'], unique=True)
    op.create_index('ix_gov_securities_description', 'gov_securities', ['description'], unique=False)
    op.create_index('ix_gov_securities_allowable', 'gov_securities', ['allowable'], unique=False)
    op.create_index('ix_gov_securities_actual', 'gov_securities', ['actual'], unique=False)
    # ### end Alembic commands ###
